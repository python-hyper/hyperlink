[tox]

envlist =
    flake8
    test-py{26,27,34,35,36,37,38,py,py3}
    coverage_report
    packaging

skip_missing_interpreters = {tty:True:False}


##
# Build (default environment)
##

[testenv]

description = run tests

basepython =
    py26: python2.6
    py27: python2.7
    py34: python3.4
    py35: python3.5
    py36: python3.6
    py37: python3.7
    py38: python3.8
    py39: python3.9
    pypy: pypy
    pypy3: pypy3

deps =
    test: coverage==4.5.4
    test: idna==2.8
    test: typing==3.7.4.1
    test: {py26,py27,py34}: pytest==4.6.6
    test: {py35,py36,py37,py38}: pytest==5.2.1
    test: pytest-cov==2.8.1

passenv =
    # See https://github.com/codecov/codecov-python/blob/master/README.md#using-tox
    # And CI-specific docs:
    #   https://help.github.com/en/articles/virtual-environments-for-github-actions#default-environment-variables
    #   https://docs.travis-ci.com/user/environment-variables#default-environment-variables
    #   https://www.appveyor.com/docs/environment-variables/
    codecov: TOXENV CODECOV_* CI
    codecov: GITHUB_*
    codecov: TRAVIS TRAVIS_*
    codecov: APPVEYOR APPVEYOR_*

    # Used in our AppVeyor config
    codecov: OS

setenv =
    PY_MODULE=hyperlink

    test: PYTHONPYCACHEPREFIX={envtmpdir}/pycache

    test: COVERAGE_FILE={toxworkdir}/coverage.{envname}
    {coverage_report,codecov}: COVERAGE_FILE={toxworkdir}/coverage
    codecov: COVERAGE_XML={envlogdir}/coverage_report.xml

commands =
    test: pytest --cov={env:PY_MODULE} --cov-report=term-missing:skip-covered --doctest-modules {posargs:src/{env:PY_MODULE}}


##
# Flake8 linting
##

[testenv:flake8]

description = run Flake8 (linter)

basepython = python3.8

skip_install = True

# Pin pydocstyle to version 3: see https://gitlab.com/pycqa/flake8-docstrings/issues/36
deps =
    flake8-bugbear==19.8.0
    #flake8-docstrings==1.4.0
    #flake8-import-order==0.18.1
    #flake8-pep3101==1.2.1
    flake8==3.7.8
    mccabe==0.6.1
    pep8-naming==0.8.2
    pydocstyle==4.0.1

commands =
    flake8 {posargs:src/{env:PY_MODULE}}


[flake8]

# !!! BRING THE PAIN !!!
select = A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z

show-source  = True
doctests     = True

# Codes: http://flake8.pycqa.org/en/latest/user/error-codes.html
ignore =
    # syntax error in type comment
    F723,

    # function name should be lowercase
    N802,

    # argument name should be lowercase
    N803,

    # variable in function should be lowercase
    N806,

    # variable in class scope should not be mixedCase
    N815,

    # variable in global scope should not be mixedCase
    N816,

    # line break after binary operator
    W504,

    # End of list (allows last item to end with trailing ',')
    EOL

# flake8-import-order: local module name space
application-import-names = deploy


##
# Mypy static type checking
##

[testenv:mypy]

description = run Mypy (static type checker)

basepython = python3.8

skip_install = True


deps =
    mypy==0.730


commands =
    mypy                                       \
        --config-file="{toxinidir}/tox.ini"    \
        --cache-dir="{toxworkdir}/mypy_cache"  \
        {tty:--pretty:}                        \
        {posargs:src}


[mypy]

# Global settings

disallow_incomplete_defs = True
disallow_untyped_defs    = True
no_implicit_optional     = True
show_column_numbers      = True
show_error_codes         = True
strict_optional          = True
warn_no_return           = True
warn_redundant_casts     = True
warn_return_any          = True
warn_unreachable         = True
warn_unused_ignores      = True

# Enable these over time
check_untyped_defs       = False

# Disable some checks until effected files fully adopt mypy

[mypy-hyperlink._url]
allow_untyped_defs = True

[mypy-idna]
ignore_missing_imports = True


##
# Coverage report
##

[testenv:coverage_report]

description = generate coverage report

basepython = python

skip_install = True

deps =
    coverage==4.5.4

commands =
    coverage combine
    coverage report
    coverage html


##
# Codecov
##

[testenv:codecov]

description = upload coverage to Codecov

basepython = python

skip_install = True

deps =
    coverage==4.5.4
    codecov==2.0.15

commands =
    coverage combine
    coverage xml -o "{env:COVERAGE_XML}"
    codecov --file="{env:COVERAGE_XML}" --env \
        GITHUB_REF GITHUB_COMMIT GITHUB_USER GITHUB_WORKFLOW \
        TRAVIS_BRANCH TRAVIS_BUILD_WEB_URL TRAVIS_COMMIT TRAVIS_COMMIT_MESSAGE \
        APPVEYOR_REPO_BRANCH APPVEYOR_REPO_COMMIT \
        APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED


##
# Packaging
##

[testenv:packaging]

description = check for potential packaging problems

basepython = python

deps =
   check-manifest==0.40
   readme_renderer==24.0

commands =
   check-manifest
   python setup.py check --metadata --restructuredtext --strict
